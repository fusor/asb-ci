worker_processes 1;
events {
  worker_connections 1024;
}
http {
  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout 65;

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name {{ inventory_hostname }};
    return 301 https://$server_name$request_uri;
  }


  server {
{% if vagrant is not defined and letsencrypt %}
    ssl_certificate /etc/letsencrypt/live/{{ letsencrypt_hostname }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ letsencrypt_hostname }}/privkey.pem;
{% elif custom_cert_file is defined and custom_key_file is defined %}
    ssl_certificate {{ custom_cert_file }};
    ssl_certificate_key {{ custom_key_file }};
{% else %}
    ssl_certificate /etc/ssl/certs/jenkins.crt;
    ssl_certificate_key /etc/ssl/certs/jenkins.key;
{% endif %}
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name {{ inventory_hostname }};
    ignore_invalid_headers off;
    location / {
      proxy_pass http://127.0.0.1:8080;
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
  }
}
